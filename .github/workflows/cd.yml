name: CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install boto3
    
    - name: Deploy to AWS Lambda
      run: |
        python infrastructure/aws/deploy_to_aws.py --environment staging
    
    - name: Deploy MLflow model
      run: |
        python infrastructure/aws/sagemaker_deployment.py --environment staging
    
    - name: Health check
      run: |
        python scripts/health_check.py --environment staging

  deploy-production:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    needs: deploy-staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        aws-region: us-east-1
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install boto3
    
    - name: Deploy to Production AWS
      run: |
        python infrastructure/aws/deploy_to_aws.py --environment production
    
    - name: Deploy MLflow model to Production
      run: |
        python infrastructure/aws/sagemaker_deployment.py --environment production
    
    - name: Production health check
      run: |
        python scripts/health_check.py --environment production
    
    - name: Update Streamlit app
      run: |
        # Streamlit Cloud deployment hook
        curl -X POST "${{ secrets.STREAMLIT_DEPLOYMENT_WEBHOOK }}" \
          -H "Authorization: Bearer ${{ secrets.STREAMLIT_TOKEN }}"
    
    - name: Notify deployment success
      run: |
        echo "ðŸš€ Media Mix Modeling deployed to production successfully!"

  docker-publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        tags: |
          joshamorrison/media-mix-modeling:latest
          joshamorrison/media-mix-modeling:${{ steps.version.outputs.VERSION }}
        platforms: linux/amd64,linux/arm64